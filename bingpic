#!/bin/bash

SAVE_DIR="/Users/jpd/.bingpic";

getBingPicture() {
  local INDEX=0;
  mkdir -p $SAVE_DIR;

  getLatestBingPhotos $1;
  getLatestBingPhotos $1;

  # only keep the latest 7 files
  local FILES=$(ls -t $SAVE_DIR | tail -n +8);
  for FILE in $FILES; do
    rm -rf "$SAVE_DIR/$FILE";
  done
}

getLatestBingPhotos() {
  local NUMBER_TO_FETCH=$1;
  mkdir -p $SAVE_DIR;

  #  jq -r ".images[] | [.startdate, .urlbase] | @tsv" | while IFS=$'\t' read -r date path ; do echo $date $path ; done ;
  local IMAGE_DATA=$(curl -s https://www.bing.com/HPImageArchive.aspx\?format\=js\&n\=$1);

  echo $IMAGE_DATA | jq -r ".images[] | [.startdate, .urlbase] | @tsv" |
    while IFS=$'\t' read -r IMGDATE URLBASE ; do
      local PATHNAME="${URLBASE}_UHD.jpg";
      echo " Fetching $PATHNAME";
      local URL="https://www.bing.com$PATHNAME";
      local IFS='='; read P1 P2 <<< "${PATHNAME}";
      local FINAL_PATH="$SAVE_DIR/${IMGDATE}_${P2}";

      if [ ! -f "$FINAL_PATH" ]; then
        echo " Fetching $FINAL_PATH";
        curl -s --output "${FINAL_PATH}" "${URL}";
      fi
    done ;
}

getAndSetBingPicAsWallpaper(){
  local SAVE_DIR="/tmp/bingpaper";
  mkdir -p $SAVE_DIR;
  rm -rf "$SAVE_DIR/*";

  echo "=== BingPaper starting at $(date) ===";
  echo " Save path : $SAVE_DIR";
  local IMAGE_DATA=$(curl -s https://www.bing.com/HPImageArchive.aspx\?format\=js\&n\=1 | jq '.images[0].urlbase' -r);

  echo " Building URL to fetch...";
  echo "  Orig : $IMAGE_DATA";

  local PATHNAME="${IMAGE_DATA}_UHD.jpg";
  local URL="https://www.bing.com$PATHNAME";
  local IFS='='; read P1 P2 <<< "${PATHNAME}";
  local FINAL_PATH="$SAVE_DIR/$P2";

  echo "  URL  : $URL";
  echo "  File : $FINAL_PATH";
  curl -s --output "${FINAL_PATH}" "${URL}";
  setWallpaper $FINAL_PATH;
}

setWallpaper() {
  echo " Setting wallpaper to $1"
  osascript -e "tell application \"System Events\" to tell every desktop to set picture to \"$1\" as POSIX file";
  echo "=== BingPaper finished at $(date) ==="
}

if [ "$1" == "set" ]; then
  setWallpaper $2;
elif [ "$1" == "get" ]; then
  getBingPicture $2;
elif [ "$1" == "getAndSet" ]; then
  getAndSetBingPicAsWallpaper;
fi

# if no value is passed, default to 1, otherwise use the value passed
if [ -z "$1" ]; then
  getBingPicture 1;
else
  getBingPicture $1;
fi
